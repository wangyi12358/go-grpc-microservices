package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.70

import (
	"context"
	"fmt"
	"microservices/ent"
	graphql1 "microservices/internal/gateway/graphql"
	"microservices/internal/gateway/graphql/model"
)

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, username string, password string) (*model.Login, error) {
	panic(fmt.Errorf("not implemented: Login - login"))
}

// RefreshAccessToken is the resolver for the refreshAccessToken field.
func (r *mutationResolver) RefreshAccessToken(ctx context.Context, refreshToken string) (*model.AccessToken, error) {
	panic(fmt.Errorf("not implemented: RefreshAccessToken - refreshAccessToken"))
}

// Profile is the resolver for the profile field.
func (r *queryResolver) Profile(ctx context.Context) (*ent.User, error) {
	panic(fmt.Errorf("not implemented: Profile - profile"))
}

// Mutation returns graphql1.MutationResolver implementation.
func (r *Resolver) Mutation() graphql1.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
